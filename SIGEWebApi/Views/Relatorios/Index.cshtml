@using SIGEWebApi.DTO
@using SIGEWebApi.Controllers
@model SIGEWebApi.ViewModels.RelatoriosViewModel
@{
    ViewBag.Title = "Relatorios";
    var informacoesFinanceiroManha = new InformacaoFinanceiroDTO();
    var informacoesFinanceiroNoite = new InformacaoFinanceiroDTO();
    var informacoesFinanceiroTarde = new InformacaoFinanceiroDTO();
}

<h2>Relatorios</h2>
<script type="text/javascript">
    jQuery("document").ready(function () {

        var dadosVenda = null;
        var dadosProd = null;
        var dadosFin = null;

        buscarDadosVenda();

    });


    function buscarDadosVenda() {
        var jqxhr = jQuery.get("https://sigemv.azurewebsites.net/api/EventosClasses", function () {

        }).done(function (data) {
            console.log(data);
            dadosVenda = data;
        }).fail(function (data) {
            console.log(data);
        });
    }
    function buscarDadosProd() {
        var jqxhr = jQuery.get("https://sigemv.azurewebsites.net/api/EventosClasses", function () {

        }).done(function (data) {
            console.log(data);
        }).fail(function (data) {
            console.log(data);
        });
    }
</script>
<div class="row">
    <div class="col-lg-12 col-md-12">
        <div class="card">
            <div class="card-header card-header-warning">
                <h4 class="card-title">Produção</h4>
                <p class="card-category">Producao por turno</p>
            </div>
            <div class="card-body table-responsive">
                <table class="table table-hover">
                    <thead class="text-warning">
                        <tr>
                            <th>Mês </th>
                            <th>Turno</th>
                            <th>Qnt&nbsp;&nbsp;produzida </th>
                            <th>Gasto </th>
                            <th>Total de vendas </th>
                            <th>Horas Totais Trabalhadas no Mês </th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.listaInformacoesProducao.Count; i++)
                        {
                            <tr>
                                <td rowspan="3">@Model.listaInformacoesProducao[i].Key</td>
                                <td>@(Model.listaInformacoesProducao[i].Where(x => x.turno.Contains("Manhã")).FirstOrDefault() != null ? Model.listaInformacoesProducao[i].Where(x => x.turno == "Manhã").FirstOrDefault().turno : "--")</td>
                                <td>@(Model.listaInformacoesProducao[i].Where(x => x.turno.Contains("Manhã")).FirstOrDefault() != null ? Model.listaInformacoesProducao[i].Where(x => x.turno == "Manhã").FirstOrDefault().quantidade.ToString() : "--") </td>
                                <td>@(Model.listaInformacoesFinanceiro.Where(x => x.mes.Trim().ToLower() == Model.listaInformacoesProducao[i].Key.Trim().ToLower() && x.turno.Trim().ToLower().Contains("manhã")).FirstOrDefault() != null ? Model.listaInformacoesFinanceiro.Where(x => x.mes.Trim().ToLower() == Model.listaInformacoesProducao[i].Key.Trim().ToLower() && x.turno.Trim().ToLower().Contains("manhã")).FirstOrDefault().valor.ToString() : "--") </td>
                                <td rowspan="3"> @(Model.listaInformacoesDeptoVendas.Where(x => x.MesCorrente == Model.listaInformacoesProducao[i].Key.ToLower().Trim()).ToList().Sum(y => y.quantidade) )</td>
                                <td rowspan="3">@(Model.listaHorasTrabalhadas.Where(x => x.Mes == SIGEWebApi.Controllers.RelatoriosController.ConverterMesToInt(Model.listaInformacoesProducao[i].Key)).Sum(y => Convert.ToInt32(y.HorasTrabalhadasNoMes)))</td>
                            </tr>
                            <tr>
                                <td>@(Model.listaInformacoesProducao[i].Where(x => x.turno == "Tarde").FirstOrDefault() != null ? Model.listaInformacoesProducao[i].Where(x => x.turno == "Tarde").FirstOrDefault().turno : "--")</td>
                                <td>@(Model.listaInformacoesProducao[i].Where(x => x.turno == "Tarde").FirstOrDefault() != null ? Model.listaInformacoesProducao[i].Where(x => x.turno == "Tarde").FirstOrDefault().quantidade.ToString() : "--")</td>
                                <td>@(Model.listaInformacoesFinanceiro.Where(x => x.mes.Trim().ToLower() == Model.listaInformacoesProducao[i].Key.Trim().ToLower() && x.turno.Trim().ToLower().Contains("tarde")).FirstOrDefault() != null ? Model.listaInformacoesFinanceiro.Where(x => x.mes.Trim().ToLower() == Model.listaInformacoesProducao[i].Key.Trim().ToLower() && x.turno.Trim().ToLower().Contains("tarde")).FirstOrDefault().valor.ToString() : "--")</td>
                                @*<td>43</td>*@
                            </tr>
                            <tr>
                                <td>@(Model.listaInformacoesProducao[i].Where(x => x.turno == "Noite").FirstOrDefault() != null ? Model.listaInformacoesProducao[i].Where(x => x.turno == "Noite").FirstOrDefault().turno : "--")</td>
                                <td>@(Model.listaInformacoesProducao[i].Where(x => x.turno == "Noite").FirstOrDefault() != null ? Model.listaInformacoesProducao[i].Where(x => x.turno == "Noite").FirstOrDefault().quantidade.ToString() : "--")</td>
                                <td>@(Model.listaInformacoesFinanceiro.Where(x => x.mes.Trim().ToLower() == Model.listaInformacoesProducao[i].Key.Trim().ToLower() && x.turno.Trim().ToLower().Contains("noite")).FirstOrDefault() != null ? Model.listaInformacoesFinanceiro.Where(x => x.mes.Trim().ToLower() == Model.listaInformacoesProducao[i].Key.Trim().ToLower() && x.turno.Trim().ToLower().Contains("noite")).FirstOrDefault().valor.ToString() : "--")</td>
                                @*<td>31</td>*@
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-12 col-md-12">
        <div class="card">
            <div class="card-header card-header-warning">
                <h4 class="card-title">Employees Stats</h4>
                <p class="card-category">Eventos e vendas</p>
            </div>
            <div class="card-body table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Mês </th>
                            <th>Qnt produzida </th>
                            <th>Total de vendas </th>
                            <th>Eventos no Mês </th>
                            <th>Gastos com e eventos </th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.listaInformacoesProducao.Count; i++)
                        {
                            <tr>
                                <td>@Model.listaInformacoesProducao[i].Key</td>
                                <td>@(Model.listaInformacoesProducao[i].Sum(x => x.quantidade))</td>
                                <td> @(Model.listaInformacoesDeptoVendas.Where(x => x.MesCorrente == Model.listaInformacoesProducao[i].Key.ToLower().Trim()).ToList().Sum(y => y.quantidade) )</td>
                                <td>@(Model.listaEventos.Where(x => x.MesCorrente.Trim().ToLower() == Model.listaInformacoesProducao[i].Key.ToLower().Trim()).ToList().Count )</td>
                                <td>@(Model.listaEventos.Where(x => x.MesCorrente.Trim().ToLower() == Model.listaInformacoesProducao[i].Key.ToLower().Trim() && x.eventoOrcamentos != null ).Any() ? Model.listaEventos.Where(x => x.MesCorrente.Trim().ToLower() == Model.listaInformacoesProducao[i].Key.ToLower().Trim()).FirstOrDefault().eventoOrcamentos.ToString() : "não registrado" )</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>